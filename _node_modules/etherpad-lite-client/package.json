{
  "name": "etherpad-lite-client",
  "description": "Wrapper for the Etherpad Lite API",
  "version": "0.7.0",
  "author": {
    "name": "Tomas Sedovic",
    "email": "tomas@sedovic.cz"
  },
  "contributors": [
    {
      "name": "Simon Gaeremynck http://gaeremynck.com/"
    },
    {
      "name": "yourcelf https://github.com/yourcelf"
    },
    {
      "name": "Michael Lutonsky http://luto.at/"
    },
    {
      "name": "anshulc https://github.com/anshulc"
    }
  ],
  "keywords": [
    "etherpad",
    "api"
  ],
  "homepage": "https://github.com/tomassedovic/etherpad-lite-client-js",
  "repository": {
    "type": "git",
    "url": "git://github.com/tomassedovic/etherpad-lite-client-js.git"
  },
  "dependencies": {
    "underscore": "1.3.x"
  },
  "devDependencies": {
    "coffee-script": "~1"
  },
  "scripts": {
    "prepublish": "cake build"
  },
  "main": "./main.js",
  "license": "MIT",
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "Etherpad Lite API\n=================\n\nSupports all the API calls described in the [Etherpad Lite API page][1].\n\n\nSetup\n-----\n\nYou can install it via NPM:\n```\n$ npm install etherpad-lite-client\n```\nor add it to your `package.json` dependencies:\n```json\n\"etherpad-lite-client\": \"0.7.x\"\n```\n\nUsage\n-----\n```javascript\napi = require('etherpad-lite-client')\netherpad = api.connect({\n  apikey: 'UcCGa6fPpkLflvPVBysOKs9eeuWV08Ul',\n  host: 'localhost',\n  port: 9001,\n})\n\netherpad.createGroup(function(error, data) {\n  if(error) console.error('Error creating group: ' + error.message)\n  else console.log('New group created: ' + data.groupID)\n})\n```\n\nCertain API calls require that you pass some arguments:\n\n```javascript\nvar args = {\n  groupID: 'g.yJPG7ywIW6zPEQla',\n  padName: 'testpad',\n  text: 'Hello world!',\n}\netherpad.createGroupPad(args, function(error, data) {\n  if(error) console.error('Error creating pad: ' + error.message)\n  else console.log('New pad created: ' + data.padID)\n})\n```\n\n\n\n\n### Callback & Returned Data ###\n\nThe callback function should look like this:\n```javascript\nfunction(error, data) {\n  if(error) {\n    // handle error using error.code and error.message\n  }\n\n  // some code\n}\n```\nThe callback function takes two argument: `error` and `data`.\n\n#### error ###\n`error` is null if everything is fine. Otherwise it's a JavaScript object that\ndescribes what's wrong.\n\nIt has two attributes: `code` and `message`:\n* `error.code`\n  * `1` wrong parameters\n  * `2` internal error\n  * `3` no such function\n  * `4` no or wrong API Key\n  * `-1` there was problem with calling Etherpad API\n* `error.message`: a text representation of the error\n\n#### data ####\n\n`data` is a JavaScript object from the Etherpad response or `null` (on error).\n\n\nLicense\n-------\n\nThis code is released under the MIT (Expat) license.\n\nSee the attached file LICENSE.txt for more details or visit:\n\n<http://www.opensource.org/licenses/MIT>\n\n\n[1]: https://github.com/ether/etherpad-lite/wiki/HTTP-API\n",
  "readmeFilename": "README.markdown",
  "bugs": {
    "url": "https://github.com/tomassedovic/etherpad-lite-client-js/issues"
  },
  "_id": "etherpad-lite-client@0.7.0",
  "dist": {
    "shasum": "fb94e675349b6a1f93eb824c4ad596fc1bad36c6"
  },
  "_from": "etherpad-lite-client@0.7.0",
  "_resolved": "https://registry.npmjs.org/etherpad-lite-client/-/etherpad-lite-client-0.7.0.tgz"
}
