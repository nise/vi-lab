{
  "name": "node-csv",
  "description": "A CSV parser for node.js",
  "version": "0.1.2",
  "keywords": [
    "csv",
    "parse",
    "csv parser",
    "csv parsing"
  ],
  "author": {
    "name": "Chris O'Hara",
    "email": "cohara87@gmail.com"
  },
  "main": "./lib/csv",
  "directories": {
    "lib": "./lib"
  },
  "engines": {
    "node": ">=0.2.2"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "readme": "A CSV parser for node.js\n\nTo install node-csv, use [npm](http://github.com/isaacs/npm):\n\n    $ npm install node-csv\n\n## Usage\n\n    var csv = require('node-csv').createParser();\n    \n    var csv_str = \"1,2,3\\n4,5,6\";\n    \n    csv.parse(csv_str, function(err, data) {\n    \n        console.log(data); //Outputs: [[1,2,3],[4,5,6]]\n        \n    });\n    \n    // or\n    \n    csv.parseFile('./test.csv', function(err, data) {\n        console.log(data);\n    });\n\ncreateParser() takes 3 optional params - delimiter, quote_char, quote_escape\n\nE.g. to parse tab separated values where fields are wrapped with quotes (\") and quotes are escaped with \\\"\n\n    var csv = require('node-csv').createParser('\\t', '\"', '\\\\');\n    \nnode-csv can also convert each row to an object based on the column names in the first row, e.g.\n\ntest.csv\n\n    id,user,pass\n    1,foo,bar\n    \nparse.js\n\n    var csv = require('node-csv').createParser();\n    \n    csv.mapFile('./test.csv', function(err, data) {\n    \n        console.log(data); //Outputs: [ { id: '1', user: 'foo', pass: 'bar' } ]\n        \n    });\n",
  "readmeFilename": "README.md",
  "_id": "node-csv@0.1.2",
  "_from": "node-csv@"
}
